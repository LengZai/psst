document.addEventListener("dragover",function(a){a.preventDefault()},!1);document.addEventListener("dragend",function(a){a.preventDefault()},!1);document.addEventListener("drop",function(a){a.preventDefault()},!1);
var psst=function(a,e){return new Promise(function(f,d){a||d("psst(e) received a non-event for 'e'");var g=function(a){return new Promise(function(b,k){var c=new FileReader;c.readAsDataURL(a);c.onloadend=function(){b(c.result)}})};if(a.dataTransfer){var b=a.dataTransfer.files[0]?a.dataTransfer.files[0].name:null;if(b){var h=["jpg","png","jpeg"];e&&"[object Array]"==Object.prototype.toString.call(e)&&e.forEach(function(a){h.push(a)});b=b.split(".").pop().toLowerCase();0>h.indexOf(b)?d("This filetype is not allowed."):
(b=a.dataTransfer.files[0].type,0<=b.indexOf("image")?g(a.dataTransfer.files[0]).then(function(a){f({time:Date.now(),type:"image",data:a})})["catch"](function(a){console.error(a)}):d("This type of a file can't be processed because it's not an image."))}else d("For some reason, the dropped file couldn't be handled.")}else if(a.clipboardData){var c=a.clipboardData.items?a.clipboardData.items:!1;c.length?(b=c[1]?c[1].type:c[0].type)?0<=b.indexOf("image")?(b=c[1]?c[1].getAsFile():c[0].getAsFile(),g(b).then(function(a){f({time:Date.now(),
type:"image",data:a})})["catch"](function(a){console.error(a)})):f({time:Date.now(),type:"text",data:a.clipboardData.getData("text")}):d("Couldn't detect clipboard data."):d("No data in clipboard.")}})};